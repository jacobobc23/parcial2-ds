package views;

import controllers.OrderManagementController;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Order;

/**
 *
 * @author Jacobo-bc
 */
public class OrdersManagementWindow extends javax.swing.JFrame {

    private final OrderManagementController controller;

    /**
     * Creates new form OrdersManagementWindow
     */
    public OrdersManagementWindow() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Clientes");
        controller = new OrderManagementController();
        fillTable();
        setCbxCustomers();
        setCbxSearchCustomer();
        hideWarning();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        cbxCustomers = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnInsertOrder = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnDeleteOrder = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();
        btnViewAll = new javax.swing.JButton();
        btnSelectCustomer = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        cbxFilter = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        lblWarning = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informaci√≥n pedido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("CLIENTE:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("TOTAL:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(txtTotal)
                    .addComponent(jLabel3)
                    .addComponent(cbxCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        btnInsertOrder.setText("REGISTRAR");
        btnInsertOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertOrderActionPerformed(evt);
            }
        });

        btnUpdateOrder.setText("EDITAR");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        btnDeleteOrder.setText("ELIMINAR");
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedidos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ordersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ordersTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("ID PEDIDO:");

        btnViewAll.setText("VER TODOS");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        btnSelectCustomer.setText("BUSCAR");
        btnSelectCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectCustomerActionPerformed(evt);
            }
        });

        btnClean.setText("LIMPIAR");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        cbxFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxFilterItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("CLIENTE:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnSelectCustomer)
                .addGap(18, 18, 18)
                .addComponent(btnViewAll)
                .addGap(18, 18, 18)
                .addComponent(btnClean)
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectCustomer)
                    .addComponent(btnViewAll)
                    .addComponent(btnClean)
                    .addComponent(cbxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        lblWarning.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblWarning.setText("NO SE ENCONTRARON ORDENES");

        btnHome.setText("home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnInsertOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdateOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)))
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(lblWarning)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(73, 73, 73))))
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnInsertOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteOrder))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblWarning)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertOrderActionPerformed
        if (hasEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            return;
        }

        double total = Double.parseDouble(txtTotal.getText());
        String customer = cbxCustomers.getSelectedItem().toString();

        Customer selectedCustomer = null;

        for (Customer customers : controller.listCustomers()) {
            if (customers.getName().equals(customer)) {
                selectedCustomer = customers;
                break;
            }
        }

        try {
            Order order = new Order(selectedCustomer, total);
            controller.insertOrder(order);
            JOptionPane.showMessageDialog(null, "Orden registrada correctamente");
            fillTable();
            cleanFields();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar la orden");

        }
    }//GEN-LAST:event_btnInsertOrderActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        if (hasEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            return;
        }

        double total = Double.parseDouble(txtTotal.getText());
        String customer = cbxCustomers.getSelectedItem().toString();

        Customer selectedCustomer = null;

        for (Customer customers : controller.listCustomers()) {
            if (customers.getName().equals(customer)) {
                selectedCustomer = customers;
                break;
            }
        }

        try {
            Order order = new Order(selectedCustomer, total);
            controller.updateOrder(order);
            JOptionPane.showMessageDialog(null, "Orden editada correctamente");
            fillTable();
            cleanFields();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al editar la orden");

        }
    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        int selected = ordersTable.getSelectedRow();

        if (selected >= 0) {

            int id = (int) ordersTable.getModel().getValueAt(selected, 0);

            int answer = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de eliminar la orden?",
                    "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);

            if (answer == 0) {
                controller.deleteOrder(id);
                fillTable();
                JOptionPane.showMessageDialog(null, "Cleinte eliminado correctamente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un cliente de la tabla");
        }
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    private void btnSelectCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectCustomerActionPerformed
        if (txtFilter.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el id de la orden que desea buscar");
            return;
        }

        int id = Integer.parseInt(txtFilter.getText().trim());

        DefaultTableModel model = new DefaultTableModel();

        model.setColumnIdentifiers(new Object[]{
            "ID", "Fecha", "Total", "Cliente"
        });

        ordersTable.setModel(model);
        Order order = controller.selectOrder(id);
        if (order != null) {
            model.addRow(new Object[]{
                order.getId(),
                order.getDate(),
                order.getTotal(),
                order.getCustomer().getName()
            });

        } else {
            JOptionPane.showMessageDialog(null, "Orden no encontrada");
            fillTable();
        }
    }//GEN-LAST:event_btnSelectCustomerActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        fillTable();
        cleanFields();
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        cleanTable();
        cleanFields();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void ordersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersTableMouseClicked
        int seleccion = ordersTable.getSelectedRow();

        txtTotal.setText(ordersTable.getValueAt(seleccion, 2).toString());
        cbxCustomers.setSelectedItem((ordersTable.getValueAt(seleccion, 3)).toString());
    }//GEN-LAST:event_ordersTableMouseClicked

    private void cbxFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxFilterItemStateChanged
        if (cbxFilter.getSelectedIndex() != 0) {

            String name = cbxFilter.getSelectedItem().toString().trim();
            String selectedID = "";
            for (Customer customers : controller.listCustomers()) {
                if (customers.getName().equals(name)) {
                    selectedID = customers.getId();
                    break;
                }
            }

            DefaultTableModel model = new DefaultTableModel();

            model.setColumnIdentifiers(new Object[]{
                "ID", "Fecha", "Total", "Cliente"
            });

            ordersTable.setModel(model);
            ArrayList<Order> orders = controller.listCustomerOrders(selectedID);

            if (!orders.isEmpty()) {
                hideWarning();
                for (Order order : orders) {
                    model.addRow(new Object[]{
                        order.getId(),
                        order.getDate(),
                        order.getTotal(),
                        order.getCustomer().getName()
                    });
                }
            } else {

                cleanTable();
                showWarning();
            }

        } else {
            fillTable();
            hideWarning();
        }
    }//GEN-LAST:event_cbxFilterItemStateChanged

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        new Main().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void fillTable() {
        DefaultTableModel model = new DefaultTableModel();

        ArrayList<Order> orders = controller.listAllOrders();
        model.setColumnIdentifiers(new Object[]{
            "ID", "Fecha", "Total", "Cliente"
        });

        ordersTable.setModel(model);

        for (Order order : orders) {
            model.addRow(new Object[]{
                order.getId(),
                order.getDate(),
                order.getTotal(),
                order.getCustomer().getName()
            });
        }
    }

    private boolean hasEmptyFields() {
        return (txtTotal.getText().isEmpty() || cbxCustomers.getSelectedIndex() == 0);
    }

    private void cleanFields() {
        txtTotal.setText("");
        txtFilter.setText("");
        cbxFilter.setSelectedIndex(0);
        cbxCustomers.setSelectedIndex(0);
    }

    private void cleanTable() {
        DefaultTableModel model = (DefaultTableModel) ordersTable.getModel();
        model.setRowCount(0);
    }

    private void setCbxCustomers() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        cbxCustomers.setModel(model);

        ArrayList<Customer> customers = controller.listCustomers();
        model.addElement("Seleccione un Cliente"); // Agrega la opci√≥n predeterminada

        for (Customer customer : customers) {
            model.addElement(customer.getName()); // Agrega los nombres de los clientes al ComboBoxModel
        }
    }

    private void setCbxSearchCustomer() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        cbxFilter.setModel(model);

        ArrayList<Customer> customers = controller.listCustomers();
        model.addElement("Seleccione un cliente"); // Agrega la opci√≥n predeterminada

        for (Customer customer : customers) {
            model.addElement(customer.getName()); // Agrega los nombres de los clientes  al ComboBoxModel
        }
    }

    private void hideWarning() {
        lblWarning.setVisible(false);
    }

    private void showWarning() {
        lblWarning.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnInsertOrder;
    private javax.swing.JButton btnSelectCustomer;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JComboBox<String> cbxCustomers;
    private javax.swing.JComboBox<String> cbxFilter;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTable ordersTable;
    private javax.swing.JTextField txtFilter;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
